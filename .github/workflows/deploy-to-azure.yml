name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and push image directly with Azure CLI
      run: |
        echo "Building and pushing with Azure CLI..."
        
        # Enable admin on ACR if not already enabled
        echo "Ensuring admin is enabled on ACR..."
        az acr update --name taurusapiregistry --admin-enabled true
        
        # Build and push directly with ACR Tasks
        echo "Building and pushing with ACR Tasks..."
        az acr build --registry taurusapiregistry \
                    --image taurus-api:latest \
                    --image taurus-api:${{ github.sha }} .
    
    - name: Get ACR credentials
      run: |
        echo "Getting ACR credentials for Container App..."
        ACR_USERNAME=$(az acr credential show --name taurusapiregistry --query "username" -o tsv)
        ACR_PASSWORD=$(az acr credential show --name taurusapiregistry --query "passwords[0].value" -o tsv)
        
        # Store as environment variables for next steps
        echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
        echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
      
    - name: Deploy to Azure Container App
      run: |
        echo "Deploying to Azure Container App..."
        
        # First try a different approach with secrets
        echo "Using secrets for Container App..."
        az containerapp registry set \
          --name taurus-api \
          --resource-group taurus-api-rg \
          --server taurusapiregistry.azurecr.io \
          --username "${{ env.ACR_USERNAME }}" \
          --password "${{ env.ACR_PASSWORD }}"
          
        # Now update the image
        az containerapp update \
          --name taurus-api \
          --resource-group taurus-api-rg \
          --image taurusapiregistry.azurecr.io/taurus-api:latest
      
    - name: Get Container App URL
      run: |
        echo "Deployment successful! Your API is available at: https://$(az containerapp show --name taurus-api --resource-group taurus-api-rg --query properties.configuration.ingress.fqdn -o tsv)" 