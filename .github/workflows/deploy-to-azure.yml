name: Deploy Diagnostic App to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and push diagnostic image with Azure CLI
      run: |
        echo "Building and pushing diagnostic image..."
        
        # Enable admin on ACR if not already enabled
        echo "Ensuring admin is enabled on ACR..."
        az acr update --name taurusapiregistry --admin-enabled true
        
        # Build and push directly with ACR Tasks using the debug Dockerfile
        echo "Building and pushing with ACR Tasks..."
        az acr build --registry taurusapiregistry \
                    --file Dockerfile.debug \
                    --image taurus-api-debug:latest \
                    --image taurus-api-debug:${{ github.sha }} .
    
    - name: Get ACR credentials
      run: |
        echo "Getting ACR credentials for Container App..."
        ACR_USERNAME=$(az acr credential show --name taurusapiregistry --query "username" -o tsv)
        ACR_PASSWORD=$(az acr credential show --name taurusapiregistry --query "passwords[0].value" -o tsv)
        
        # Store as environment variables for next steps
        echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
        echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
    
    - name: Create diagnostic Container App
      run: |
        echo "Creating a new diagnostic Container App..."
        
        # First check if the app already exists
        if az containerapp show --name taurus-api-debug --resource-group taurus-api-rg &>/dev/null; then
          echo "Diagnostic app already exists, updating it..."
          
          # Configure registry access
          az containerapp registry set \
            --name taurus-api-debug \
            --resource-group taurus-api-rg \
            --server taurusapiregistry.azurecr.io \
            --username "${{ env.ACR_USERNAME }}" \
            --password "${{ env.ACR_PASSWORD }}"
            
          # Update the image
          az containerapp update \
            --name taurus-api-debug \
            --resource-group taurus-api-rg \
            --image taurusapiregistry.azurecr.io/taurus-api-debug:latest
        else
          echo "Creating new diagnostic app..."
          # Create the container app
          az containerapp create \
            --name taurus-api-debug \
            --resource-group taurus-api-rg \
            --environment taurusapi-environment \
            --registry-server taurusapiregistry.azurecr.io \
            --registry-username "${{ env.ACR_USERNAME }}" \
            --registry-password "${{ env.ACR_PASSWORD }}" \
            --image taurusapiregistry.azurecr.io/taurus-api-debug:latest \
            --target-port 8000 \
            --ingress external \
            --min-replicas 1 \
            --max-replicas 1 \
            --cpu 0.5 \
            --memory 1.0Gi
        fi
      
    - name: Get Diagnostic App URL
      run: |
        DEBUG_URL=$(az containerapp show --name taurus-api-debug --resource-group taurus-api-rg --query properties.configuration.ingress.fqdn -o tsv)
        echo "Diagnostic deployment successful! Try these endpoints:"
        echo "- Homepage: https://$DEBUG_URL"
        echo "- Health check: https://$DEBUG_URL/health"
        echo "- Environment info: https://$DEBUG_URL/info" 