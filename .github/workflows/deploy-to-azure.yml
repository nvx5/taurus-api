name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and push image directly with Azure CLI
      run: |
        echo "Building and pushing with Azure CLI..."
        
        # Enable admin on ACR if not already enabled
        echo "Ensuring admin is enabled on ACR..."
        az acr update --name taurusapiregistry --admin-enabled true
        
        # Build and push directly with ACR Tasks
        echo "Building and pushing with ACR Tasks..."
        az acr build --registry taurusapiregistry \
                    --image taurus-api:latest \
                    --image taurus-api:${{ github.sha }} .
    
    - name: Get ACR credentials
      run: |
        echo "Getting ACR credentials for Container App..."
        ACR_USERNAME=$(az acr credential show --name taurusapiregistry --query "username" -o tsv)
        ACR_PASSWORD=$(az acr credential show --name taurusapiregistry --query "passwords[0].value" -o tsv)
        
        # Store as environment variables for next steps
        echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
        echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
      
    - name: Configure Container App Resources and Probes
      run: |
        echo "Configuring Container App with improved settings..."
        
        # First set registry credentials
        echo "Setting registry credentials..."
        az containerapp registry set \
          --name taurus-api \
          --resource-group taurus-api-rg \
          --server taurusapiregistry.azurecr.io \
          --username "${{ env.ACR_USERNAME }}" \
          --password "${{ env.ACR_PASSWORD }}"
          
        # Update Container App with improved settings
        echo "Updating Container App configuration..."
        az containerapp update \
          --name taurus-api \
          --resource-group taurus-api-rg \
          --min-replicas 1 \
          --max-replicas 5 \
          --cpu 1 \
          --memory 2Gi \
          --image taurusapiregistry.azurecr.io/taurus-api:latest
        
        # Configure health probes with JSON - longer timeouts for AstroSeek
        echo "Setting health probes..."
        
        # Create a temporary JSON file for the container configuration
        cat > container_config.json << EOF
        {
          "containers": [
            {
              "name": "taurus-api",
              "probes": [
                {
                  "type": "liveness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8000
                  },
                  "initialDelaySeconds": 60,
                  "periodSeconds": 60,
                  "timeoutSeconds": 15,
                  "failureThreshold": 3,
                  "successThreshold": 1
                },
                {
                  "type": "readiness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8000
                  },
                  "initialDelaySeconds": 45,
                  "periodSeconds": 20,
                  "timeoutSeconds": 15
                }
              ]
            }
          ]
        }
        EOF
        
        # Update the container app with the new configuration
        az containerapp update \
          --name taurus-api \
          --resource-group taurus-api-rg \
          --containers @container_config.json
      
    - name: Get Container App URL and Status
      run: |
        echo "Getting Container App URL and details..."
        APP_URL=$(az containerapp show --name taurus-api --resource-group taurus-api-rg --query properties.configuration.ingress.fqdn -o tsv)
        echo "Deployment URL: https://$APP_URL"
        
        # Display replica status
        echo "Checking replica status (may take a minute to initialize)..."
        az containerapp replica list \
          --name taurus-api \
          --resource-group taurus-api-rg \
          --query "[].{Name:name,State:properties.state,Reason:properties.reason}" \
          -o table
        
        echo "Deployment successful! Your API is available at: https://$APP_URL"
        echo "Note: Initial startup may take a minute or two for the health check to pass." 