name: Build and Deploy Docker Image to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY_NAME: taurusapiregistry
  APP_NAME: taurus-transit-api
  RESOURCE_GROUP: taurus-api-rg
  PYTHON_VERSION: "3.10"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    # Force Python 3.10 for Docker build
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}, ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:latest
        build-args: |
          PYTHON_VERSION=${{ env.PYTHON_VERSION }}
        
    - name: Deploy to Azure Container Apps
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az containerapp update \
            --name ${{ env.APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }} \
            --query properties.configuration.ingress.fqdn 